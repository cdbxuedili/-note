system
参数：命令（字符串）
返回值:fork失败，返回-1，如果exec执行成功，即command顺利执行完毕，
则返回command通过exit或return返回的值，如果exec执行失败，即命令没有执行成功，例如命令不存在，一般返回127；
如果命令为NULL，且如果shell存在并可用返回非0值，一般是1，反之为0。

守护进程（daemon）
//后台进程，在后台执行某些功能

创建守护进程的五个步骤
1、父进程创建子进程，父进程退出  fork
2、成为会话组组长 		setsid
3、改变工作目录			chdir
4、修改权限掩码			umask
5、关闭所有的文件描述符		close  getdtablesize()

线程
概念：带有时间片的函数，一个进程可以包含多个线程（多个线程可以同时执行）

线程和进程的区别：
进程：资源分配的最小单位，进程间资源独立
线程：资源调度的最小单位，多个线程共享一个进程的资源（每个线程有自己独立的栈）

pthread_create
功能：创建一个线程
参数：1、pthread_t *pthread  获取线程id
      2、attr  设置所创建的线程的属性，如果为NULL则会设置为默认属性
      3、void *（*fun）（void *） 线程对应的函数的函数名
      4、可以为NULL，若不为NULL，则会给创建的线程传参；
返回值：成功返回0，失败返回线程独有的errno（注：不同于之前的errno，无法使用perror）

pthread_join
功能：等待某一个线程退出并回收其资源
参数：1、线程id
      2、如果不为NULL，可接收线程退出时的状态，如果不需要其退出状态，则填NULL即可
返回值：成功返回0，失败返回线程独有的errno（注：不同于之前的errno，无法使用perror）      

pthread_exit
功能：线程退出
参数：可填NULL，也可以返回一个地址（注意：返回的地址不可以是当前栈区的某一个地址，线程结束会随之释放）
返回值：无

pthread_cancel
功能：请求取消某一个线程
参数：指定的线程id
返回值：成功返回0，失败返回线程errno

临界资源：当某些资源可以被多个线程或者进程同时使用，且如果一起使用的话可能会出现问题的资源

同步：多个任务按照某一个指定的顺序执行（同步本身也是一种互斥）
互斥：多个任务在同一时间点只能执行其中一个

信号量

sem_init
功能：初始化信号量
参数：1、信号量取地址
      2、如果为0，则该信号量由一个进程间的多个线程使用，反之，由多个进程使用
      3、设置的信号量的初始值      
 
sem_wait（p操作）
功能：等待某一个信号量的条件到达
参数：信号量取地址，如果信号量值为0，则阻塞等待直到信号量值为非0值，若不为0，则继续往下执行且将信号量值-1

sem_post （v操作）
功能：将某个信号量值+1
参数：信号量取地址

互斥锁

pthread_mutex_init
功能：初始化互斥锁
参数：1、锁取地址
      2、锁属性，如果为NULL，则为默认属性

pthread_mutex_lock
功能：对某个锁进行加锁
参数：锁取地址

pthread_mutex_unlock
功能：对某个锁进行解锁
参数：锁取地址

sudo apt-get install manpages-posix-dev












 




