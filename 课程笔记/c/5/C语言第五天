while:

while(表达式)     多为逻辑与关系表达式
{
    C语句块;
    量的改变;
}

表达式:判断循环是否成立的条件,成立执行C语句块,不成立退出循环
量的改变:合理退出循环的条件,防止死循环

while(1)
{

}
死循环,ctrl+c结束死循环
设置合理退出的条件


continue 结束本次循环,直接开始下一次循环
break  跳出循环语句
goto  跳转语句
一般形式:
goto 标签名;

标签名:     <----在想要跳转的地方加上

return 结束函数,并返回函数的返回值,在main函数中使用return即退出程序

do_while:
do
{
    C语句块;
    量的改变;
}while(表达式);     <----末尾有';'号
注:do_while语句会在循环判断之前先执行一次C语句

for
一般形式:
for(表达式1;表达式2;表达式3)    注意:三个表达式以';'隔开
{
    C语句;
}
表达式1:变量的初始化,在for循环中只会在第一次循环执行
表达式2:判断循环是否成立的条件
表达式3:量的改变,控制循环退出的条件

for(;;)  死循环
{

}

双层for循环
for(表达式1;表达式2;表达式3)
{
  for(表达式4;表达式5;表达式6)
  {
    C语句7;
  }
}
            Y               Y                          N                Y
1 --- > 2 ----> 4 ----> 5 -----> 7 -----> 6 -----> 5 -----> 3 -----> 2-----> 4
1.外层循环执行一次,里层循环全部执行
2.外层循环执行一次对应的每一个里层循环都是新的循环
